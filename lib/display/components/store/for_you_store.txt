import 'dart:math';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:flutter_staggered_animations/flutter_staggered_animations.dart';

import 'package:haja/responsive.dart';
import 'package:haja/constants.dart';

import 'package:haja/display/components/store/cart_item.dart';

import 'package:haja/content/store/cache.dart';

class ForYouStore extends StatelessWidget {
  const ForYouStore({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final Size _size = MediaQuery.of(context).size;

    return Column(
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              'Popular Store Items',
              style: Theme.of(context).textTheme.subtitle1,
            ),
            TextButton.icon(
              style: TextButton.styleFrom(
                padding: EdgeInsets.symmetric(
                  horizontal: Constants.defaultPadding * 1.5,
                  vertical: Constants.defaultPadding /
                      (Responsive.isMobile(context) ? 2 : 1),
                ),
              ),
              onPressed: () {},
              icon: const Icon(Icons.add),
              label: const Text('More'),
            ),
          ],
        ),
        const SizedBox(height: Constants.defaultPadding),
        Responsive(
          mobile: NoContentFunSquare(
            crossAxisCount: _size.width < 500 ? 1 : 2,
          ),
          tablet: const NoContentFunSquare(),
          desktop: const NoContentFunSquare(),
        ),
      ],
    );
  }
}

class NoContentFunSquare extends StatelessWidget {
  const NoContentFunSquare({
    Key? key,
    this.crossAxisCount = 3,
    this.childAspectRatio = 1,
  }) : super(key: key);

  final int crossAxisCount;
  final double childAspectRatio;

  @override
  Widget build(BuildContext context) {
    return Consumer<StoreCache>(
      builder: (context, cache, child) {
        List filter = [];
        var items = cache.items;

        for (int i = 0; i < items.length; i++) {
          if (items[i].popular) {
            filter.add(items[i]);
          }
        }

        return AnimationLimiter(
          child: GridView.builder(
            physics: const NeverScrollableScrollPhysics(),
            shrinkWrap: true,
            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: crossAxisCount,
              crossAxisSpacing: Constants.defaultPadding,
              mainAxisSpacing: Constants.defaultPadding,
              childAspectRatio: childAspectRatio,
            ),
            itemCount: min(9, filter.length),
            itemBuilder: (context, index) =>
                AnimationConfiguration.staggeredList(
              position: index,
              duration: const Duration(milliseconds: 375),
              child: SlideAnimation(
                verticalOffset: 50.0,
                child: FadeInAnimation(
                  child: CartItem(
                    filter[index],
                  ),
                ),
              ),
            ),
          ),
        );
      },
    );
  }
}
